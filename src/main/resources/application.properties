spring.application.name=optima-licensing-service
spring.profiles.active=dev
spring.config.import=configserver:http://localhost:8071

logging.level.com.sadatmalik.optima.license=debug

# Actuator -- move all these to config repo???
# set the base path for all Actuator services (for example, the health endpoint is now
# exposed in the http://localhost:8080/health
management.endpoints.web.base-path=/
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.health.db.enabled=false
management.health.diskspace.enabled=true

# Eureka client properties
# Registers the IP address of the service rather than the server name:
eureka.instance.prefer-ip-address=true
# Registers the service with Eureka
eureka.client.register-with-eureka=true
# Pulls down a local copy of the registry - caches instead of always discovery
eureka.client.fetch-registry=true
# Sets the location of the Eureka service
eureka.client.service-url.defaultZone=http://netflix:eureka@localhost:8070/eureka

resilience4j.circuitbreaker.instances.licenseService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.licenseService.ringBufferSizeInClosedState=5
resilience4j.circuitbreaker.instances.licenseService.ringBufferSizeInHalfOpenState=3
resilience4j.circuitbreaker.instances.licenseService.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.licenseService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.licenseService.recordExceptions=org.springframework.web.client.HttpServerErrorException,java.io.IOException,java.util.concurrent.TimeoutException,org.springframework.web.client.ResourceAccessException

resilience4j.circuitbreaker.instances.organizationService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.organizationService.ringBufferSizeInClosedState=6
resilience4j.circuitbreaker.instances.organizationService.ringBufferSizeInHalfOpenState=4
resilience4j.circuitbreaker.instances.organizationService.waitDurationInOpenState=20s
resilience4j.circuitbreaker.instances.organizationService.failureRateThreshold=60

resilience4j.bulkhead.instances.bulkheadLicenseService.maxWaitDuration=10ms
resilience4j.bulkhead.instances.bulkheadLicenseService.maxConcurrentCalls=20

resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.maxThreadPoolSize=1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.coreThreadPoolSize=1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.queueCapacity=1

resilience4j.retry.instances.retryLicenseService.maxRetryAttempts=5
resilience4j.retry.instances.retryLicenseService.waitDuration=10000
resilience4j.retry.instances.retryLicenseService.retry-exceptions=java.util.concurrent.TimeoutException

resilience4j.ratelimiter.instances.licenseService.limitForPeriod=5
resilience4j.ratelimiter.instances.licenseService.limitRefreshPeriod=5000
resilience4j.ratelimiter.instances.licenseService.timeoutDuration=1000ms